name: Release Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # إعطاء صلاحية لتعديل الريبو ورفع الـ tags
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # جلب تاريخ Git كامل بما فيه الـ tags

      - name: Get Previous and Current Version
        id: get_version
        run: |
          echo "OLD_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo '0.0.0')" >> $GITHUB_ENV
          echo "NEW_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Run Docker Image
        run: |
          docker run --rm --name release-container \
            -p 5000:5000 \
            -e REPO_URL=https://github.com/${{ github.repository }}.git \
            mostfarwag/release:3 &  # تشغيله في الخلفية دون توقف

      - name: Wait for API and Script to Complete
        run: |
          sleep 10  # الانتظار حتى يتم تشغيل الـ API
          docker logs -f release-container &  # عرض اللوجات دون منع التشغيل
          wait %1  # الانتظار حتى ينتهي الحاوية

      - name: Extract New Tag from Logs
        run: |
          NEW_TAG=$(docker logs release-container | grep -oP 'New tag created and pushed: \K.*' || echo "")
          if [ -z "$NEW_TAG" ]; then
            echo "❌ لم يتم العثور على تاج جديد، تأكد من تشغيل الكود بشكل صحيح."
            exit 1
          fi
          echo "New Tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create and Push Tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Stop Docker Container
        if: always()
        run: |
          docker stop release-container || true
          docker rm release-container || true
